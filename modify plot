# An example of working LaTeX plotting. Make sure to get the needed packages through LaTeX package manager and update textwidth

import numpy as np
import matplotlib as mpl
mpl.use('pgf')

def figsize(scale):
    fig_width_pt = 455.24411                        # Get this from LaTeX using \the\textwidth
    inches_per_pt = 1.0/72.27                       # Convert pt to inch
    golden_mean = (np.sqrt(5.0)-1.0)/2.0            # Aesthetic ratio (you could change this)
    fig_width = fig_width_pt*inches_per_pt*scale    # width in inches
    fig_height = fig_width*golden_mean              # height in inches
    fig_size = [fig_width,fig_height]
    return fig_size

pgf_with_latex = {                      # setup matplotlib to use latex for output
    "pgf.texsystem": "pdflatex",        # change this if using xetex or lautex
    "text.usetex": True,                # use LaTeX to write all text
    "font.family": "serif",
    "font.serif": [],                   # blank entries should cause plots to inherit fonts from the document
    "font.sans-serif": [],
    "font.monospace": [],
    "axes.labelsize": 10,               # LaTeX default is 10pt font.
    "font.size": 10,
    "legend.fontsize": 8,               # Make the legend/label fonts a little smaller
    "xtick.labelsize": 8,
    "ytick.labelsize": 8,
    "figure.figsize": figsize(0.9),     # default fig size of 0.9 textwidth
    "pgf.preamble": [
        r"\usepackage[utf8x]{inputenc}",    # use utf8 fonts becasue your computer can handle it :)
        r"\usepackage[T1]{fontenc}",        # plots will be generated using this preamble
        ]
    }
mpl.rcParams.update(pgf_with_latex)
import matplotlib.pyplot as plt

# I make my own newfig and savefig functions
def newfig(width):
    plt.clf()
    fig = plt.figure(figsize=figsize(width))
    ax = fig.add_subplot(111)
    return fig, ax

def savefig(filename):
    plt.savefig('{}.pgf'.format(filename), bbox_inches='tight')
    plt.savefig('{}.pdf'.format(filename), bbox_inches='tight')
import pandas as pd
read = pd.read_csv('MonthlyReturns.csv', delimiter=";", parse_dates=True, index_col='Date')
df = pd.DataFrame(read)
del df['YearMonth']
del df['NBER']
df['MOM'] = df['MOM12']
del df['MOM12']
pr_plus = df[['DOL', 'DDOL', 'EW', 'HML', 'MOM']].add(1)
cumulative_return = pr_plus[['DOL', 'DDOL', 'EW', 'HML', 'MOM']].cumprod().sub(1)
cumulative_return.mul(100)
ax = cumulative_return.plot()
plt.legend(loc=2)
plt.title('Cumulative Returns between 1987 and 2017')
plt.ylabel('Cumulative Returns for 1 USD')
plt.xlabel('Time')

# The plot x-axis goes approx from 205 to 574
ax.axvspan(244, 253, alpha=0.5, color='lightgrey')
ax.axvspan(383, 392, alpha=0.5, color='lightgrey')
ax.axvspan(444, 463, alpha=0.5, color='lightgrey')

fig1 = plt.gcf()
savefig('returns')
